---
- name: load distribution-specific vars (major version)
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}{{ ansible_distribution_major_version }}.yml"
      paths: vars
      skip: yes
  register: distro_vars

- name: load distribution-specific vars
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}.yml"
      paths: vars
      skip: yes
  when: not distro_vars
- name: install epel (centos)
  yum:
    name: epel-release
    state: present
  become: yes
  when: ansible_distribution == 'CentOS'

- name: install epel (rhel)
  yum:
    name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
    state: present
  become: yes
  when: ansible_distribution == 'RedHat' and subman_modify_repos

- name: install spacewalk repo (openSUSE Leap)
  get_url:
    url: http://download.opensuse.org/repositories/systemsmanagement:/spacewalk/openSUSE_Leap_42.2/systemsmanagement:spacewalk.repo
    dest: /etc/zypp/repos.d/
  become: yes
  when: ansible_distribution == 'openSUSE Leap' and subman_modify_repos

- name: Update env_keep to include DISPLAY (openSUSE Leap)
  lineinfile:
    dest: /etc/sudoers.d/subman_devel
    line: 'Defaults:{{ ansible_user_id }}  env_keep += "DISPLAY"'
    state: present
  become: yes
  when: ansible_distribution == 'openSUSE Leap'

- name: install non-pip/spec deps
  package:
    name: "{{ distro_specific_deps }}"
    state: present
  become: yes
  when: distro_specific_deps is defined

- name: install tito deps (openSUSE Leap)
  pip:
    name: blessings
  become: yes
  when: ansible_distribution == 'openSUSE Leap'

- name: install tito (openSUSE Leap)
  pip: name=git+https://github.com/kahowell/tito@suse#egg=tito state=present editable=false
  become: yes
  when: ansible_distribution == 'openSUSE Leap'

- name: install deps for subscription-manager-gui (el6 only)
  yum:
    name: "{{ item }}"
    state: present
  become: yes
  with_items:
    - pygtk2-libglade
    - gnome-icon-theme
    - usermode-gtk
  when: (ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS') and
        ansible_distribution_major_version == "6"

- name: install subscription-manager build deps
  command: "{{ builddep_command }} -y {{ subman_checkout_dir }}/subscription-manager.spec"
  become: yes
  when: distro_specific_subman_build_deps is not defined

- name: install distro specific subscription-manager build deps
  package:
    name: "{{ item }}"
    state: present
  become: yes
  with_items: "{{ distro_specific_subman_build_deps}}"
  when: distro_specific_subman_build_deps is defined

- name: install nvm
  shell: 'curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.4/install.sh | bash'
  args:
    creates: "{{ ansible_user_dir }}/.nvm"
    warn: no
  when: install_cockpit

- name: use nvm to install nodejs
  shell: >
    /bin/bash -c
    ". ~/.nvm/nvm.sh &&
    nvm install {{ subman_nodejs_version }} &&
    nvm alias default {{ subman_nodejs_version }}"
  args:
    creates: "{{ ansible_user_dir }}/.nvm/versions/node/{{ subman_nodejs_version }}"
  when: install_cockpit

- name: install yarn (for cockpit package build)
  npm:
    executable: "{{ ansible_user_dir }}/.nvm/versions/node/{{ subman_nodejs_version }}/bin/npm"
    name: yarn
    global: yes
  environment:
    PATH: "{{ ansible_user_dir }}/.nvm/versions/node/{{ subman_nodejs_version }}/bin"
  when: install_cockpit and install_yarn_via_npm

- include: cockpit.yml
  when: ansible_distribution == 'Fedora' or (ansible_distribution == 'CentOS' and ansible_distribution_major_version == '7') or (ansible_distribution == 'RedHat' and (ansible_distribution_major_version == '8' or ansible_distribution_major_version == '7')) and install_cockpit

- name: install python test deps
  command: "{{pip_version}} install -r test-requirements.txt"
  args:
    chdir: "{{ subman_checkout_dir }}"
  become: yes

- name: tito build subscription-manager (initial)
  command: tito build --test --rpm
  args:
    chdir: "{{ subman_checkout_dir }}"
    creates: /usr/lib*/python*/site-packages/subscription_manager
  when: subman_setup_hacking_environment and not (ansible_distribution == 'Debian') and subman_use_tito

- name: install subscription-manager (initial)
  shell: "{{ distro_package_command }} install -y /tmp/tito/*/subscription-manager-{rhsm-{certificates-,},}[0-9]*"
  args:
    chdir: "{{ subman_checkout_dir }}"
    creates: /usr/lib*/python*/site-packages/subscription_manager
  become: yes
  when: subman_setup_hacking_environment and not (ansible_distribution == 'Debian') and subman_use_tito

- name: alter PYTHONPATH
  template:
    src: sitecustomize.py.j2
    dest: "{{ sitecustomize_path }}"
  become: yes

- name: compile c artifacts (Debian only)
  make:
    chdir: "{{ subman_checkout_dir }}"
  when: subman_setup_hacking_environment and ansible_distribution == 'Debian'

- name: install c artifacts (Debian only)
  make:
    chdir: "{{ subman_checkout_dir }}"
    target: install
  become: yes
  when: subman_setup_hacking_environment and ansible_distribution == 'Debian'

- name: install subscription-manager (Debian only)
  pip:
    name: "{{ subman_checkout_dir }}"
    extra_args: "-e"
  become: yes
  when: subman_setup_hacking_environment and ansible_distribution == 'Debian'

- name: set GTK version
  lineinfile:
    name: /etc/environment
    line: "SUBMAN_GTK_VERSION={% if ansible_distribution_major_version == '6' %}2{% else %}3{% endif %}"
  become: yes

- name: configure sudo to allow sudo subscription-manager to work as expected
  lineinfile:
    name: /etc/sudoers
    line: "Defaults    secure_path = /usr/local/sbin:/sbin:/bin:/usr/sbin:/usr/bin"
    regexp: '^Defaults\s+secure_path.*'
  become: yes

# needed for dbus to read etc-conf/dbus/system.d
- name: disable selinux
  selinux:
    state: permissive
    policy: targeted
  become: yes
  when: not (ansible_distribution == 'Debian')

# the shim includes etc-conf/dbus/system.d/com.redhat.RHSM1.conf
- name: replace RHSM1 dbus policy file with shim
  template:
    src: com.redhat.RHSM1.conf.j2
    dest: /etc/dbus-1/system.d/com.redhat.RHSM1.conf
  become: yes
  when: subman_setup_hacking_environment

- name: add cockpit local plugin dir
  file:
    path: /usr/local/share/cockpit
    state: directory
  become: yes
  when: subman_setup_hacking_environment and install_cockpit

- name: add symlink to dist for cockpit plugin
  file:
    src: "{{ subman_checkout_dir }}/cockpit/dist"
    dest: /usr/local/share/cockpit/subscription-manager
    state: link
    force: yes
  become: yes
  when: subman_setup_hacking_environment and install_cockpit

- name: update glibc-common if not already latest
  package:
    name: glibc-common
    state: latest
  become: yes
  when: ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS'

- name: reinstall glibc-common to lay down langs
  become: true
  command: yum -y reinstall glibc-common
  when: ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS'

- name: Make fake Xauthority (if needed)
  copy:
    content: ""
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    dest: "{{ ansible_user_dir }}/.Xauthority"
    force: no
  tags:
    - xauth
  when: setup_xforwarding

- name: link user's Xauthority to root user
  file:
    src: "{{ ansible_user_dir }}/.Xauthority"
    dest: /root/.Xauthority
    state: link
  become: yes
  tags:
    - xauth
  when: setup_xforwarding

- name: add rhsm.certificate compile hack to .bashrc
  lineinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    line: "test {{ subman_checkout_dir }}/src/rhsm/*certificate*.so -nt {{ subman_checkout_dir }}/src/certificate.c || (cd {{ subman_checkout_dir}}; {{ subman_python_interpreter }} setup.py build_ext --inplace 2>&1 > /dev/null)"
  when: subman_setup_hacking_environment

- name: compile rhsm.certificate
  command: "{{ subman_python_interpreter }} setup.py build_ext --inplace"
  args:
    chdir: "{{ subman_checkout_dir }}"

- name: add wrapper scripts in /usr/local/sbin
  copy:
    content: '{{ subman_python_interpreter }} -m {{ item.value }} "$@"'
    dest: "/usr/local/sbin/{{ item.key }}"
    mode: 0555
  become: yes
  loop: "{{ subman_script_wrappers | dict2items }}"

- name: Remove /usr/bin/subscription-manager
  file:
    path: "/usr/bin/subscription-manager"
    state: absent
  become: yes
  when: subman_setup_hacking_environment
  
- name: Remove /usr/share/cockpit/subscription-manager
  file:
    path: "/usr/share/cockpit/subscription-manager"
    state: absent
  become: yes
  when: subman_setup_hacking_environment
